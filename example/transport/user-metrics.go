// GENERATED BY 'T'ransport 'G'enerator. DO NOT EDIT.
package transport

import (
	"context"
	"fmt"
	"github.com/seniorGolang/tg/v2/example/interfaces"
	"github.com/seniorGolang/tg/v2/example/interfaces/types"
	"time"
)

type metricsUser struct {
	next interfaces.User
}

func metricsMiddlewareUser(next interfaces.User) interfaces.User {
	return &metricsUser{next: next}
}

func (m metricsUser) GetUser(ctx context.Context, cookie string, userAgent string) (user *types.User, err error) {

	defer func(_begin time.Time) {
		RequestCount.WithLabelValues("user", "getUser", fmt.Sprint(err == nil)).Add(1)
		RequestCountAll.WithLabelValues("user", "getUser", fmt.Sprint(err == nil)).Add(1)
		RequestLatency.WithLabelValues("user", "getUser", fmt.Sprint(err == nil)).Observe(time.Since(_begin).Seconds())
	}(time.Now())

	return m.next.GetUser(ctx, cookie, userAgent)
}

func (m metricsUser) CustomResponse(ctx context.Context, arg0 int, arg1 string, opts ...interface{}) (err error) {

	defer func(_begin time.Time) {
		RequestCount.WithLabelValues("user", "customResponse", fmt.Sprint(err == nil)).Add(1)
		RequestCountAll.WithLabelValues("user", "customResponse", fmt.Sprint(err == nil)).Add(1)
		RequestLatency.WithLabelValues("user", "customResponse", fmt.Sprint(err == nil)).Observe(time.Since(_begin).Seconds())
	}(time.Now())

	return m.next.CustomResponse(ctx, arg0, arg1, opts...)
}

func (m metricsUser) CustomHandler(ctx context.Context, arg0 int, arg1 string, opts ...interface{}) (err error) {

	defer func(_begin time.Time) {
		RequestCount.WithLabelValues("user", "customHandler", fmt.Sprint(err == nil)).Add(1)
		RequestCountAll.WithLabelValues("user", "customHandler", fmt.Sprint(err == nil)).Add(1)
		RequestLatency.WithLabelValues("user", "customHandler", fmt.Sprint(err == nil)).Observe(time.Since(_begin).Seconds())
	}(time.Now())

	return m.next.CustomHandler(ctx, arg0, arg1, opts...)
}
